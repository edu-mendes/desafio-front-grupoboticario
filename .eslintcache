[{"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\index.js":"1","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\App.js":"2","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\index.js":"3","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\LoginPage.jsx":"4","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\index.js":"5","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\RegisterPage.jsx":"6","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\index.js":"7","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\PurchaseListing.jsx":"8","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\index.js":"9","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\PurchaseRegister.jsx":"10","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\UI\\index.js":"11","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\Header\\index.js":"12"},{"size":220,"mtime":1608094688666,"results":"13","hashOfConfig":"14"},{"size":1223,"mtime":1608491756634,"results":"15","hashOfConfig":"14"},{"size":65,"mtime":1608232416903,"results":"16","hashOfConfig":"14"},{"size":2089,"mtime":1608490594232,"results":"17","hashOfConfig":"14"},{"size":73,"mtime":1608470486417,"results":"18","hashOfConfig":"14"},{"size":3905,"mtime":1608490732195,"results":"19","hashOfConfig":"14"},{"size":85,"mtime":1608471802001,"results":"20","hashOfConfig":"14"},{"size":467,"mtime":1608490914072,"results":"21","hashOfConfig":"14"},{"size":85,"mtime":1608470709454,"results":"22","hashOfConfig":"14"},{"size":2741,"mtime":1608490825771,"results":"23","hashOfConfig":"14"},{"size":155,"mtime":1608482051109,"results":"24","hashOfConfig":"14"},{"size":754,"mtime":1608490979932,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1d175m0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\index.js",[],["55","56"],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\App.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\LoginPage.jsx",["57","58"],"import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Link,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ButtonStyled } from \"../UI\"\r\nimport Header from \"../Header\";\r\n\r\n\r\nfunction LoginPage() {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const goToAccount = () => {\r\n    history.push(\"/account\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container component=\"article\" maxWidth=\"sm\">\r\n        <Typography variant=\"h3\" component=\"h1\" align=\"center\">Login</Typography>\r\n        <form >\r\n          <TextField\r\n            value={email}\r\n            // onChange={(event) => {\r\n            //     setEmail(event.target.value);\r\n            // }}\r\n            name=\"email\"\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            value={password}\r\n            // onChange={(ev) => {\r\n            //     setPassword(ev.target.value);\r\n            // }}\r\n            // onBlur={validarCampos}\r\n            // error={!erros.password.valido}\r\n            // helperText={erros.password.texto}\r\n            name=\"password\"\r\n            id=\"password\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <ButtonStyled type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={goToAccount}>\r\n            Entrar\r\n            </ButtonStyled>\r\n        </form>\r\n        <Grid container>\r\n          <Grid item alignContent=\"space-around\">\r\n            <Link href=\"#\" onClick={goToAccount} variant=\"body2\">\r\n              {\"Ainda n√£o tem o Cashback OBoticario? Cadastre-se\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\RegisterPage.jsx",["59","60","61"],"import React, { useState } from \"react\";\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Typography,\r\n    Link,\r\n    Container\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ButtonStyled } from \"../UI\";\r\nimport Header from \"../Header\";\r\n\r\n\r\nfunction RegisterPage() {\r\n\r\n    const [nome, setNome] = useState(\"\");\r\n    const [cpf, setCpf] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n\r\n    const goToPurchase = () => {\r\n        history.push(\"/purchase\")\r\n    }\r\n\r\n    const goToLoginPage = () => {\r\n        history.push(\"/\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container component=\"article\" maxWidth=\"sm\">\r\n                <Typography variant=\"h3\" component=\"h1\" align=\"center\">Crie sua conta no Cashback</Typography>\r\n                <form>\r\n                    <TextField\r\n                        value={nome}\r\n                        onChange={(ev) => {\r\n                            setNome(ev.target.value);\r\n                        }}\r\n                        name=\"nome\"\r\n                        label=\"Nome Completo\"\r\n                        id=\"nome\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        value={cpf}\r\n                        // onChange={(ev) => {\r\n                        //     setCpf(ev.target.value)\r\n                        // }}\r\n                        // onBlur={validarCampos}\r\n                        // name=\"cpf\"\r\n                        // error={!erros.cpf.valido}\r\n                        // helperText={erros.cpf.texto}\r\n                        label=\"CPF\"\r\n                        id=\"cpf\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        value={email}\r\n                        // onChange={(event) => {\r\n                        //     setEmail(event.target.value);\r\n                        // }}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        value={password}\r\n                        // onChange={(ev) => {\r\n                        //     setSenha(ev.target.value);\r\n                        // }}\r\n                        // onBlur={validarCampos}\r\n                        // error={!erros.senha.valido}\r\n                        // helperText={erros.senha.texto}\r\n                        name=\"senha\"\r\n                        id=\"senha\"\r\n                        label=\"Senha\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <ButtonStyled type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={goToPurchase}>\r\n                        Criar Conta\r\n                </ButtonStyled>\r\n                    <Grid container>\r\n                        <Grid item alignContent=\"space-around\">\r\n                            <Link href=\"#\" onClick={goToLoginPage} variant=\"body2\">\r\n                                {\"J√° tem Conta? Fa√ßa login\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\PurchaseListing.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\PurchaseRegister.jsx",["62","63","64"],"import React, { useState } from \"react\";\r\nimport {\r\n    TextField,\r\n    Typography,\r\n    Container\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ButtonStyled } from \"../UI\";\r\nimport Header from \"../Header\";\r\n\r\n\r\nfunction PurchaseRegister() {\r\n\r\n    const [codigo, setCodigo] = useState(\"\");\r\n    const [valor, setValor] = useState(\"\");\r\n    const [data, setData] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const goToRegister = () => {\r\n        history.push(\"/register\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Container component=\"article\" maxWidth=\"sm\">\r\n                <Typography variant=\"h3\" component=\"h1\" align=\"center\">Adcionar compra</Typography>\r\n                <form>\r\n                    <TextField\r\n                        value={codigo}\r\n                        // onChange={(ev) => {\r\n                        //     setNome(ev.target.value);\r\n                        // }}\r\n                        name=\"codigo\"\r\n                        label=\"Codigo da Compra\"\r\n                        id=\"codigo\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        value={valor}\r\n                        // onChange={(ev) => {\r\n                        //     setCpf(ev.target.value)\r\n                        // }}\r\n                        // onBlur={validarCampos}\r\n                        // name=\"cpf\"\r\n                        // error={!erros.cpf.valido}\r\n                        // helperText={erros.cpf.texto}\r\n                        label=\"Valor da Compra\"\r\n                        id=\"cpf\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                    />\r\n\r\n                    <TextField\r\n                        value={data}\r\n                        // onChange={(event) => {\r\n                        //     setEmail(event.target.value);\r\n                        // }}\r\n                        name=\"data\"\r\n                        id=\"data\"\r\n                        label=\"Data da compra\"\r\n                        type=\"text\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n\r\n                    <ButtonStyled type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth onClick={goToRegister}>\r\n                        Cadastrar Compra\r\n                </ButtonStyled>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PurchaseRegister;","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\UI\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\Header\\index.js",["65","66"],"import React from \"react\";\r\nimport styled from \"styled-components\"\r\n// import bank_logo from \"../../assets/images/bank_logo.svg\";\r\n// import { corPrimaria } from \"../UI/variaveis\";\r\n\r\nconst BtnCabecalho = styled.a`\r\n  text-align: center;\r\n  border-radius: 3px;\r\n  padding: 5px 20px;\r\n  margin: 0 10px;\r\n  font-weight: 600;\r\n  border: 2px solid white;\r\n\r\n\r\n`;\r\n\r\nconst StyledHeader = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 15vw;\r\n  height: 10vh;\r\n  align-items: center;\r\n  background-color: #6f967e;\r\n  margin-bottom: 5vh;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 50px;\r\n  width: 50px;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <StyledHeader>\r\n     \r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":16,"column":17,"nodeType":"73","messageId":"74","endLine":16,"endColumn":25},{"ruleId":"71","severity":1,"message":"75","line":17,"column":20,"nodeType":"73","messageId":"74","endLine":17,"endColumn":31},{"ruleId":"71","severity":1,"message":"76","line":17,"column":17,"nodeType":"73","messageId":"74","endLine":17,"endColumn":23},{"ruleId":"71","severity":1,"message":"72","line":18,"column":19,"nodeType":"73","messageId":"74","endLine":18,"endColumn":27},{"ruleId":"71","severity":1,"message":"75","line":19,"column":22,"nodeType":"73","messageId":"74","endLine":19,"endColumn":33},{"ruleId":"71","severity":1,"message":"77","line":14,"column":20,"nodeType":"73","messageId":"74","endLine":14,"endColumn":29},{"ruleId":"71","severity":1,"message":"78","line":15,"column":19,"nodeType":"73","messageId":"74","endLine":15,"endColumn":27},{"ruleId":"71","severity":1,"message":"79","line":16,"column":18,"nodeType":"73","messageId":"74","endLine":16,"endColumn":25},{"ruleId":"71","severity":1,"message":"80","line":6,"column":7,"nodeType":"73","messageId":"74","endLine":6,"endColumn":19},{"ruleId":"71","severity":1,"message":"81","line":27,"column":7,"nodeType":"73","messageId":"74","endLine":27,"endColumn":11},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'setEmail' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","'setCpf' is assigned a value but never used.","'setCodigo' is assigned a value but never used.","'setValor' is assigned a value but never used.","'setData' is assigned a value but never used.","'BtnCabecalho' is assigned a value but never used.","'Logo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]