[{"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\index.js":"1","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\App.js":"2","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\index.js":"3","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\LoginPage.jsx":"4","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\index.js":"5","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\RegisterPage.jsx":"6","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\index.js":"7","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\PurchaseListing.jsx":"8","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\index.js":"9","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\PurchaseRegister.jsx":"10","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\Header\\index.js":"11","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\IntegrationPage\\index.js":"12","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\IntegrationPage\\IntegrationPage.jsx":"13","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PersonalInformation\\index.js":"14","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PersonalInformation\\PersonalInformation.jsx":"15","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\InitialStepper\\InitialStepper.jsx":"16","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\InitialStepper\\index.js":"17"},{"size":725,"mtime":1609691093589,"results":"18","hashOfConfig":"19"},{"size":1002,"mtime":1609338805241,"results":"20","hashOfConfig":"19"},{"size":65,"mtime":1608232416903,"results":"21","hashOfConfig":"19"},{"size":2529,"mtime":1609692654309,"results":"22","hashOfConfig":"19"},{"size":73,"mtime":1608470486417,"results":"23","hashOfConfig":"19"},{"size":3082,"mtime":1609692669316,"results":"24","hashOfConfig":"19"},{"size":85,"mtime":1608471802001,"results":"25","hashOfConfig":"19"},{"size":6283,"mtime":1609616067676,"results":"26","hashOfConfig":"19"},{"size":85,"mtime":1608470709454,"results":"27","hashOfConfig":"19"},{"size":3515,"mtime":1609616084739,"results":"28","hashOfConfig":"19"},{"size":3101,"mtime":1609675798558,"results":"29","hashOfConfig":"19"},{"size":84,"mtime":1608998839703,"results":"30","hashOfConfig":"19"},{"size":2245,"mtime":1609615872958,"results":"31","hashOfConfig":"19"},{"size":96,"mtime":1608999545797,"results":"32","hashOfConfig":"19"},{"size":3135,"mtime":1609615842365,"results":"33","hashOfConfig":"19"},{"size":901,"mtime":1609673939697,"results":"34","hashOfConfig":"19"},{"size":79,"mtime":1609596872167,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d175m0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\App.js",[],["72","73"],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\LoginPage\\LoginPage.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\RegisterPage\\RegisterPage.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseListing\\PurchaseListing.jsx",["74","75"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    Link\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { List, ListItem, ListItemText } from '@material-ui/core/';\r\nimport firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst API_URL = 'http://localhost:3001';\r\nconst USERS_URL = `${API_URL}/users`;\r\nconst PURCHASE_URL = `${API_URL}/purchase`;\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    orange: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: deepOrange[500],\r\n    },\r\n    purple: {\r\n        color: theme.palette.getContrastText(deepPurple[500]),\r\n        backgroundColor: deepPurple[500],\r\n    },\r\n    card: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        marginTop: '6vh',\r\n        '& > *': {\r\n\r\n            width: theme.spacing(33),\r\n\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '6vh',\r\n    },\r\n    seeMore: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        marginTop: '3vh',\r\n        '& > *': {\r\n            width: theme.spacing(18),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nfunction PurchaseListing({ handleBack }) {\r\n\r\n    const [fetchUser, setFetchUser] = useState([]);\r\n    const [fetchPurchase, setFetchPurchase] = useState([]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    const loadDataUsers = async () => {\r\n        const response = await fetch(`${USERS_URL}?uid=${user.uid}`)\r\n        const data = await response.json()\r\n        setFetchUser(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDataUsers();\r\n    }, []);\r\n\r\n    const loadDataPurchase = async () => {\r\n        const response = await fetch(`${PURCHASE_URL}?uidPurchase=${user.uid}`)\r\n        const data = await response.json()\r\n        setFetchPurchase(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDataPurchase();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.container}\r\n            container\r\n            direction=\"column\"\r\n            justify=\"space-evenly\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n        >\r\n            <Grid item xs={12} md={8}>\r\n                {fetchUser.map(usr => (\r\n\r\n                    <Paper variant=\"outlined\" className={classes.card}>\r\n                        <div className={classes.root}>\r\n                            <Avatar className={classes.purple}>{usr.nickname.slice(0, 1)}</Avatar>\r\n                        </div>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Nome\" secondary={usr.name} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"CPF\" secondary={usr.cpf} />\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Email\" secondary={usr.email} />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                ))\r\n                }\r\n\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>Compras Cadastradas</Typography>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><strong>Código</strong></TableCell>\r\n                                    <TableCell><strong>Valor</strong></TableCell>\r\n                                    <TableCell><strong>Data&nbsp;&nbsp;</strong></TableCell>\r\n                                    <TableCell><strong>% de Cashback</strong></TableCell>\r\n                                    <TableCell><strong>Valor do Cashback</strong></TableCell>\r\n                                    <TableCell align=\"right\"><strong>Status</strong></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {fetchPurchase.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        <TableCell>{row.code}</TableCell>\r\n                                        <TableCell>{Number(row.price).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</TableCell>\r\n                                        <TableCell>{row.purchaseDate}</TableCell>\r\n                                        <TableCell>{Math.floor(row.percentageCashback * 100)}%</TableCell>\r\n                                        <TableCell>{(Number(row.price) * row.percentageCashback).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</TableCell>\r\n                                        <TableCell align=\"right\">{row.status}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <div className={classes.seeMore}>\r\n                            <Link color=\"primary\" href=\"#\" onClick={handleBack}>\r\n                                Cadastrar Outra Compra\r\n                        </Link>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default PurchaseListing;","C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PurchaseRegister\\PurchaseRegister.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\Header\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\IntegrationPage\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\IntegrationPage\\IntegrationPage.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PersonalInformation\\index.js",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\PersonalInformation\\PersonalInformation.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\InitialStepper\\InitialStepper.jsx",[],"C:\\Users\\Eduardo\\Documents\\GitHub\\desafio-front-grupoboticario\\src\\components\\InitialStepper\\index.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":89,"column":8,"nodeType":"82","endLine":89,"endColumn":10,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":99,"column":8,"nodeType":"82","endLine":99,"endColumn":10,"suggestions":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadDataUsers'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'loadDataPurchase'. Either include it or remove the dependency array.",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [loadDataUsers]",{"range":"94","text":"95"},"Update the dependencies array to be: [loadDataPurchase]",{"range":"96","text":"97"},[2397,2399],"[loadDataUsers]",[2674,2676],"[loadDataPurchase]"]